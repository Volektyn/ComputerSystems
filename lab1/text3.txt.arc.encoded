YiczLjIuICBTdHJ1Y3R1cmUgb2YgdGhlIFBQUFxuXG4gICBUaGlzIHNlY3Rpb24g
ZGVzY3JpYmVzIHRoZSBiYXNpYyBtb2RlbCBvZiBQUFAgdXNlZCBpbiBkZXZlbG9w
aW5nIHRoZVxuICAgUFBQIE1JQi4gVGhpcyBpbmZvcm1hdGlvbiBzaG91bGQgYmUg
dXNlZnVsIHRvIHRoZSBpbXBsZW1lbnRvciBpblxuICAgdW5kZXJzdGFuZGluZyBz
b21lIG9mIHRoZSBiYXNpYyBkZXNpZ24gZGVjaXNpb25zIG9mIHRoZSBNSUIuXG5c
biAgIFRoZSBQUFAgaXMgbm90IG9uZSBzaW5nbGUgcHJvdG9jb2wgYnV0IGEgbGFy
Z2UgZmFtaWx5IG9mIHByb3RvY29scy5cbiAgIEVhY2ggb2YgdGhlc2UgaXMsIGlu
IGl0c2VsZiwgYSBmYWlybHkgY29tcGxleCBwcm90b2NvbC4gIFRoZSBQUFBcbiAg
IHByb3RvY29scyBtYXkgYmUgZGl2aWRlZCBpbnRvIHRocmVlIHJvdWdoIGNhdGVn
b3JpZXM6XG5cbiAgIENvbnRyb2wgUHJvdG9jb2xzXG4gICAgICBUaGUgQ29udHJv
bCBQcm90b2NvbHMgYXJlIHVzZWQgdG8gY29udHJvbCB0aGUgb3BlcmF0aW9uIG9m
IHRoZVxuICAgICAgUFBQLiBUaGUgQ29udHJvbCBQcm90b2NvbHMgaW5jbHVkZSB0
aGUgTGluayBDb250cm9sIFByb3RvY29sXG4gICAgICAoTENQKSwgdGhlIFBhc3N3
b3JkIEF1dGhlbnRpY2F0aW9uIFByb3RvY29sIChQQVApLCB0aGUgTGlua1xuICAg
ICAgUXVhbGl0eSBSZXBvcnQgKExRUiksIGFuZCB0aGUgQ2hhbGxlbmdlIEhhbmRz
aGFrZSBBdXRoZW50aWNhdGlvblxuICAgICAgUHJvdG9jb2wgKENIQVApLlxuXG4g
ICBOZXR3b3JrIFByb3RvY29sc1xuICAgICAgVGhlIE5ldHdvcmsgUHJvdG9jb2xz
IGFyZSB1c2VkIHRvIG1vdmUgdGhlIG5ldHdvcmsgdHJhZmZpYyBvdmVyXG4gICAg
ICB0aGUgUFBQIGludGVyZmFjZS4gIEEgTmV0d29yayBQcm90b2NvbCBlbmNhcHN1
bGF0ZXMgdGhlIGRhdGFncmFtc1xuICAgICAgb2YgYSBzcGVjaWZpYyBoaWdoZXIt
bGF5ZXIgcHJvdG9jb2wgdGhhdCBpcyB1c2luZyB0aGUgUFBQIGFzIGFcbiAgICAg
IGRhdGEgbGluay4gIE5vdGUgdGhhdCB3aXRoaW4gdGhlIGNvbnRleHQgb2YgUFBQ
LCB0aGUgdGVybSAiTmV0d29ya1xuICAgICAgUHJvdG9jb2wiIGRvZXMgbm90IGlt
cGx5IGFuIE9TSSBMYXllci0zIHByb3RvY29sOyBmb3IgaW5zdGFuY2UsXG4gICAg
ICB0aGVyZSBpcyBhIEJyaWRnaW5nIG5ldHdvcmsgcHJvdG9jb2wuXG5cbiAgIE5l
dHdvcmsgQ29udHJvbCBQcm90b2NvbHMgKE5DUHMpXG4gICAgICBUaGUgTkNQcyBh
cmUgdXNlZCB0byBjb250cm9sIHRoZSBvcGVyYXRpb24gb2YgdGhlIE5ldHdvcmtc
biAgICAgIFByb3RvY29scy4gR2VuZXJhbGx5LCBlYWNoIE5ldHdvcmsgUHJvdG9j
b2wgaGFzIGl0cyBvd24gTmV0d29ya1xuICAgICAgQ29udHJvbCBQcm90b2NvbDsg
dGh1cywgdGhlIElQIE5ldHdvcmsgUHJvdG9jb2wgaGFzIGl0cyBJUCBDb250cm9s
XG4gICAgICBQcm90b2NvbCwgdGhlIEJyaWRnaW5nIE5ldHdvcmsgUHJvdG9jb2wg
aGFzIGl0cyBCcmlkZ2luZyBOZXR3b3JrXG4gICAgICBDb250cm9sIFByb3RvY29s
IGFuZCBzbyBvbi5cblxuICAgVGhpcyBkb2N1bWVudCBzcGVjaWZpZXMgdGhlIG9i
amVjdHMgdXNlZCBpbiBtYW5hZ2luZyBvbmUgb2YgdGhlc2VcbiAgIHByb3RvY29s
cywgbmFtZWx5IHRoZSBJUCBOZXR3b3JrIENvbnRyb2wgUHJvdG9jb2wuXG5cbjMu
My4gIE1JQiBHcm91cHNcblxuICAgT2JqZWN0cyBpbiB0aGlzIE1JQiBhcmUgYXJy
YW5nZWQgaW50byBzZXZlcmFsIE1JQiBncm91cHMuICBFYWNoIGdyb3VwXG4gICBp
cyBvcmdhbml6ZWQgYXMgYSBzZXQgb2YgcmVsYXRlZCBvYmplY3RzLlxuXG4gICBU
aGVzZSBncm91cHMgYXJlIHRoZSBiYXNpYyB1bml0IG9mIGNvbmZvcm1hbmNlOiBp
ZiB0aGUgc2VtYW50aWNzIG9mIGFcbiAgIGdyb3VwIGFyZSBhcHBsaWNhYmxlIHRv
IGFuIGltcGxlbWVudGF0aW9uIHRoZW4gYWxsIG9iamVjdHMgaW4gdGhlXG4gICBn
cm91cCBtdXN0IGJlIGltcGxlbWVudGVkLlxuXG4gICBUaGUgUFBQIE1JQiBpcyBv
cmdhbml6ZWQgaW50byBzZXZlcmFsIE1JQiBHcm91cHMsIGluY2x1ZGluZywgYnV0
IG5vdFxuICAgbGltaXRlZCB0bywgdGhlIGZvbGxvd2luZyBncm91cHM6XG5cbiAg
ICAgICAgICBvIFRoZSBQUFAgTGluayBHcm91cFxuICAgICAgICAgIG8gVGhlIFBQ
UCBMUVIgR3JvdXBcbiAgICAgICAgICBvIFRoZSBQUFAgTFFSIEV4dGVuc2lvbnMg
R3JvdXBcbiAgICAgICAgICBvIFRoZSBQUFAgSVAgR3JvdXBcbiAgICAgICAgICBv
IFRoZSBQUFAgQnJpZGdlIEdyb3VwXG4gICAgICAgICAgbyBUaGUgUFBQIFNlY3Vy
aXR5IEdyb3VwXG5cbiAgIFRoaXMgZG9jdW1lbnQgc3BlY2lmaWVzIHRoZSBmb2xs
b3dpbmcgZ3JvdXA6XG5cbiAgIFRoZSBQUFAgSVAgR3JvdXBcbiAgICAgIFRoZSBQ
UFAgSVAgR3JvdXAgY29udGFpbnMgY29uZmlndXJhdGlvbiwgc3RhdHVzLCBhbmQg
Y29udHJvbFxuICAgICAgdmFyaWFibGVzIHRoYXQgYXBwbHkgdG8gdGhlIG9wZXJh
dGlvbiBvZiBJUCBvdmVyIFBQUC5cblxuICAgICAgSW1wbGVtZW50YXRpb24gb2Yg
dGhpcyBncm91cCBpcyBtYW5kYXRvcnkgZm9yIGFsbCBpbXBsZW1lbnRhdGlvbnNc
biAgICAgIG9mIFBQUCB0aGF0IHN1cHBvcnQgSVAgb3ZlciBQUFAuXG4n